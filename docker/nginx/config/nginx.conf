load_module /usr/local/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/local/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/local/nginx/modules/ngx_http_brotli_static_module.so;

user nginx;
worker_processes auto;

error_log stderr warn;
pid /var/cache/nginx/nginx.pid;

events {
    worker_connections 1024;
}

http {
    map $request_uri $should_log {
        ~/(?:favicon\.ico|ping\.txt|ping\.php)(?:\?|$) 0;
        default 1;
    }
    access_log /dev/stdout combined if=$should_log;

    default_type application/octet-stream;
    types_hash_max_size 2048;
    include generated/mime.types;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection on;

    server_tokens off;
    absolute_redirect off;
    server_name_in_redirect off;
    port_in_redirect off;
    client_max_body_size 16M;

    gzip on;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 2;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    brotli on;
    brotli_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    include mozilla_ssl.conf;
    include tls/$TLS_TYPE.conf;

    root /var/www/html/web;
    index index.html;

    proxy_http_version 1.1;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'Upgrade';

    proxy_cache_bypass $http_authorization $arg_nocache;
    proxy_no_cache $http_authorization $arg_nocache;
    fastcgi_cache_bypass $http_authorization $arg_nocache;
    fastcgi_no_cache $http_authorization $arg_nocache;

    more_set_headers 'X-Frame-Options: SAMEORIGIN';
    more_set_headers 'X-Content-Type-Options: nosniff';
    more_set_headers 'Referrer-Policy: strict-origin';

    more_set_headers 'NEL: {"max_age":0,"include_subdomains":true}';
    more_set_headers 'Report-To: {"group":"default","max_age":60,"endpoints":[{"url":"https://atte.report-uri.com/a/d/g"}],"include_subdomains":true}';
    more_set_headers 'X-XSS-Protection: 1; mode=block; report="https://atte.report-uri.com/r/d/xss/enforce"';
    more_set_headers 'Expect-CT: enforce, max-age=60, report-uri="https://atte.report-uri.com/r/d/ct/enforce"';
    more_set_headers 'Expect-Staple: enforce; max-age=60; report-uri="https://atte.report-uri.com/r/d/staple/enforce"';

    more_clear_headers 'Public-Key-Pins' 'Public-Key-Pins-Report-Only' 'Proxy' 'Server' 'X-Powered-By';

	more_set_headers 'Cache-Control: no-cache';

    server {
        listen $HTTPS_PORT default_server $HTTPS_LISTEN;
        server_name _;
        include common.conf;

        default_type text/plain;
        return 404 'unknown host';
    }

    server {
        listen $HTTP_PORT default_server;
        server_name _;
        include common.conf;

        return 301 https://$host:$HTTPS_PORT$request_uri;
    }

    server {
        listen $LEGACY_SOCKET_PORT default_server;
        server_name _;
        include common.conf;

        location / {
            include cors.conf;
            set $backend node;
            proxy_pass http://$backend:8344;
        }
    }

    server {
        listen $HTTPS_PORT $HTTPS_LISTEN;
        server_name www.$DOMAIN;
        include common.conf;

        return 301 https://$DOMAIN$request_uri;
    }

    server {
        listen $HTTPS_PORT $HTTPS_LISTEN;
        server_name $DOMAIN cdn.$DOMAIN;
        include common.conf;

        index index.html index.php;

        location ~* \.php$ {
            try_files $uri =404;
            include fastcgi.conf;

            more_set_headers 'Cache-Control: no-store';

            set $backend php;
            fastcgi_pass $backend:9000;
        }

        location /sha1/ {
            include cors.conf;
            more_set_headers -s 200 'Cache-Control: public, max-age=31536000, immutable'; # 1 year
            rewrite ^/sha1/[^/]+/(.+)$ /$1 break;
        }

        location /berrymotes/images/ {
            include cors.conf;
            more_set_headers -s 200 'Cache-Control: public, max-age=31536000, immutable'; # 1 year
        }

        location /berrymotes/data/ {
            include cors.conf;
            more_set_headers -s 200 'Cache-Control: public, max-age=3600, stale-if-error=86400'; # 1 hour, if error 1 day
            gzip_static on;
            brotli_static on;
        }
    }

    server {
        listen $HTTPS_PORT $HTTPS_LISTEN;
        server_name socket.$DOMAIN;
        include common.conf;

        location / {
            include cors.conf;

			more_set_headers 'Cache-Control: no-store';

			set $backend node;
            proxy_pass http://$backend:8344;
        }
    }

    server {
        listen $HTTPS_PORT $HTTPS_LISTEN;
        server_name btc.$DOMAIN;
        include common.conf;

        root /var/www/html/extra;

        location ~* \.php$ {
            try_files $uri =404;
            include fastcgi.conf;

            more_set_headers 'Cache-Control: no-store';

            set $backend extra-php;
            fastcgi_pass $backend:9000;
        }

        location /berrymotes/ {
            root /var/www/html/web;
        }
    }

    map $arg_app $btc_port {
        default 0;
        ponypen 9990;
        canvas 9991;
        shotbutton 9992;
        wutcolors 9993;
    }

    server {
        listen $HTTPS_PORT $HTTPS_LISTEN;
        server_name btc-socket.$DOMAIN;
        include common.conf;

        if ($btc_port = 0) {
            return 404;
        }

        location / {
            include cors.conf;

			more_set_headers 'Cache-Control: no-store';

            proxy_pass http://$HOST_IP:$btc_port;
        }
    }
}
