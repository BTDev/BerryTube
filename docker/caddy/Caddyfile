(tls_cloudflare) {
	tls {
		dns cloudflare
		must_staple
	}
}

(tls_http) {
	tls {
		must_staple
	}
}

(tls_existing) {
	tls {
		load "/existing-certs"
	}
}

(tls_self_signed) {
	tls self_signed
}

(common) {
    gzip
    realip cloudflare

    root /var/www/html/web

    log / stdout {combined} {
        except /ping.txt /ping.php
    }

	import tls_{$TLS_TYPE}

    header / {
        Cache-Control "public, no-cache, must-revalidate"
        Referrer-Policy "strict-origin"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block; report=\"https://atte.report-uri.com/r/d/xss/enforce\""
        -Public-Key-Pins
        -Strict-Transport-Security
        -Server
        -X-Powered-By
    }
}

(php) {
    index index.php
    fastcgi / php:9000 php
}

http://{$DOMAIN}:{$HTTP_PORT},
http://www.{$DOMAIN}:{$HTTP_PORT} {
    import common
    import php

    redir {
        if {path} not_starts_with /api/
        if {~bt-migrated} is 1
        / https://{$DOMAIN}:{$HTTPS_PORT}{uri}
    }

    rewrite / {
        if {path} not_starts_with /api/
        to /api/migrate_page.html
    }

    header /api/migrate_page.html +Link "https://{$DOMAIN}:{$HTTPS_PORT}/api/migrate_frame.html; rel=preload; as=document; nopush"
    templates /api/migrate_page.html
}

https://www.{$DOMAIN}:{$HTTPS_PORT} {
	import common

    redir {
        if {~bt-migrated} is 1
        / https://{$DOMAIN}:{$HTTPS_PORT}{uri}
    }

    redir {
        if {~bt-migrated} not 1
        / "http://www.{$DOMAIN}:{$HTTP_PORT}/api/migrate_page.html#{uri}"
    }
}

https://{$DOMAIN}:{$HTTPS_PORT} {
    import common
    import php

    header /api/migrate_frame.html -X-Frame-Options

    redir {
        if {~bt-migrated} not 1
        if {path} not /api/migrate_frame.html
        / "http://{$DOMAIN}:{$HTTP_PORT}/api/migrate_page.html#{uri}"
    }
}

https://{$CDN_DOMAIN}:{$HTTPS_PORT} {
    import common

    status 404 /404
    rewrite / {
        if {file} ends_with .html
        if {file} ends_with .php
        if {path} is /
        if_op or
        to /404
    }

    rewrite /sha1/ {
        regexp ^/[^/]+/(.+)$
        to /sha1/{1}
    }

    header / {
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "OPTIONS, HEAD, GET"
        Access-Control-Max-Age "600"
    }

    # 1 month, stale while revalidate 1 day
#    header /berrymotes/ Cache-Control "public, max-age=2592000, stale-while-revalidate=86400"
    header /images/ Cache-Control "public, max-age=2592000, stale-while-revalidate=86400"
    header /sounds/ Cache-Control "public, max-age=2592000, stale-while-revalidate=86400"

    # 1 hour, stale while revalidate 1 minute
    header /berrymotes/data/ Cache-Control "public, max-age=3600, stale-while-revalidate=60"

    # 1 year, stale while revalidate 1 day, never changes
    header /sha1/ Cache-Control "public, max-age=31557600, stale-while-revalidate=86400, immutable"
}

http://:{$LEGACY_SOCKET_PORT},
https://{$SOCKET_DOMAIN}:{$HTTPS_PORT} {
    import common

    tls {
        alpn http/1.1
    }

    proxy / http://node:8344 {
        transparent
        websocket
    }
}
